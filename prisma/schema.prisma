// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  username  String    @unique
  firstname String
  lastname  String
  password  String
  isAdmin   Boolean  @default(false)
  favorites Favorite[]
  posts     Post[]
  replies   Reply[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
 
}

model Favorite {
  id          String  @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  teamId      Int   
 
  @@unique([userId, teamId])
}

model Post {
  id          String   @id @default(uuid())
  content     String
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  replies     Reply[]
}

model Reply {
  id          String   @id @default(uuid())
  content     String
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  post        Post     @relation(fields: [postId], references: [id])
  postId      String
  parentId    String? 
  parentReply Reply? @relation("NestedReplies", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  childReplies Reply[] @relation("NestedReplies")
}
